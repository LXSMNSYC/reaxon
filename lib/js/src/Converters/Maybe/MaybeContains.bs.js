// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var SafeSingleObserver$Reaxon = require("../../Observers/SafeSingleObserver.bs.js");

function operator(item, comparer, source) {
  return /* record */[/* subscribeWith */(function (obs) {
              var safe = SafeSingleObserver$Reaxon.make(obs);
              return Curry._1(source[/* subscribeWith */0], /* record */[
                          /* onSubscribe */(function (subscription) {
                              return Curry._1(safe[/* onSubscribe */0], subscription);
                            }),
                          /* onComplete */(function (param) {
                              return Curry._1(safe[/* onSuccess */1], false);
                            }),
                          /* onSuccess */(function (x) {
                              var result;
                              try {
                                result = Curry._2(comparer, x, item);
                              }
                              catch (raw_e){
                                return Curry._1(safe[/* onError */2], Caml_js_exceptions.internalToOCamlException(raw_e));
                              }
                              return Curry._1(safe[/* onSuccess */1], result);
                            }),
                          /* onError */(function (err) {
                              return Curry._1(safe[/* onError */2], err);
                            })
                        ]);
            })];
}

exports.operator = operator;
/* No side effect */
