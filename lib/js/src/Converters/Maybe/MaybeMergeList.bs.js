// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var SafeMaybeObserver$Reaxon = require("../../Observers/SafeMaybeObserver.bs.js");
var CompositeSubscription$Reaxon = require("../../Utils/CompositeSubscription.bs.js");

function operator(sources) {
  return {
          subscribeWith: (function (obs) {
              var composite = CompositeSubscription$Reaxon.make(/* () */0);
              var alive = composite.alive;
              var subscription = composite.subscription;
              var index = {
                contents: List.length(sources)
              };
              Curry._1(obs.onSubscribe, subscription);
              return List.iter((function (source) {
                            return Curry._1(source.subscribeWith, SafeMaybeObserver$Reaxon.make({
                                            onSubscribe: (function (sub) {
                                                return Curry._1(composite.add, sub);
                                              }),
                                            onComplete: (function (param) {
                                                if (Curry._1(alive, /* () */0)) {
                                                  index.contents = index.contents - 1 | 0;
                                                  if (index.contents === 0) {
                                                    Curry._1(obs.onComplete, /* () */0);
                                                    return Curry._1(subscription.cancel, /* () */0);
                                                  } else {
                                                    return 0;
                                                  }
                                                } else {
                                                  return 0;
                                                }
                                              }),
                                            onSuccess: (function (x) {
                                                if (Curry._1(alive, /* () */0)) {
                                                  index.contents = index.contents - 1 | 0;
                                                  Curry._1(obs.onNext, x);
                                                  if (index.contents === 0) {
                                                    Curry._1(obs.onComplete, /* () */0);
                                                    return Curry._1(subscription.cancel, /* () */0);
                                                  } else {
                                                    return 0;
                                                  }
                                                } else {
                                                  return 0;
                                                }
                                              }),
                                            onError: (function (x) {
                                                if (Curry._1(alive, /* () */0)) {
                                                  Curry._1(obs.onError, x);
                                                  return Curry._1(subscription.cancel, /* () */0);
                                                } else {
                                                  throw x;
                                                }
                                              })
                                          }));
                          }), sources);
            })
        };
}

exports.operator = operator;
/* No side effect */
