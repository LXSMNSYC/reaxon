// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var SafeObservableObserver$Reaxon = require("../../Observers/SafeObservableObserver.bs.js");

function operator(source) {
  return /* record */[/* subscribeWith */(function (obs) {
              var last = /* record */[/* contents */undefined];
              return Curry._1(source[/* subscribeWith */0], SafeObservableObserver$Reaxon.make(/* record */[
                              /* onSubscribe */(function (sub) {
                                  return Curry._1(obs[/* onSubscribe */0], sub);
                                }),
                              /* onComplete */(function (param) {
                                  var match = last[0];
                                  if (match !== undefined) {
                                    return Curry._1(obs[/* onSuccess */2], Caml_option.valFromOption(match));
                                  } else {
                                    return Curry._1(obs[/* onComplete */1], /* () */0);
                                  }
                                }),
                              /* onError */(function (x) {
                                  return Curry._1(obs[/* onError */3], x);
                                }),
                              /* onNext */(function (x) {
                                  last[0] = Caml_option.some(x);
                                  return /* () */0;
                                })
                            ]));
            })];
}

exports.operator = operator;
/* No side effect */
