// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function make(param) {
  var alive = /* record */[/* contents */true];
  var container = /* record */[/* contents : [] */0];
  return /* record */[
          /* subscription : record */[/* cancel */(function (param) {
                if (alive[0]) {
                  return List.iter((function (sub) {
                                return Curry._1(sub[/* cancel */0], /* () */0);
                              }), container[0]);
                } else {
                  return 0;
                }
              })],
          /* container */container,
          /* alive */(function (param) {
              return alive[0];
            }),
          /* add */(function (sub) {
              if (alive[0]) {
                container[0] = Pervasives.$at(/* :: */[
                      sub,
                      /* [] */0
                    ], container[0]);
                return /* () */0;
              } else {
                return Curry._1(sub[/* cancel */0], /* () */0);
              }
            }),
          /* remove */(function (sub) {
              if (alive[0]) {
                container[0] = List.filter((function (x) {
                          return Caml_obj.caml_notequal(x, sub);
                        }))(container[0]);
                return /* () */0;
              } else {
                return 0;
              }
            })
        ];
}

exports.make = make;
/* No side effect */
