// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var SafeObservableObserver$Reaxon = require("../../Observers/SafeObservableObserver.bs.js");

function operator(filter, source) {
  return {
          subscribeWith: (function (obs) {
              var safe = SafeObservableObserver$Reaxon.make(obs);
              return Curry._1(source.subscribeWith, {
                          onSubscribe: (function (sub) {
                              return Curry._1(safe.onSubscribe, sub);
                            }),
                          onComplete: (function (param) {
                              return Curry._1(safe.onComplete, /* () */0);
                            }),
                          onError: (function (x) {
                              return Curry._1(safe.onError, x);
                            }),
                          onNext: (function (x) {
                              var val;
                              try {
                                val = Curry._1(filter, x);
                              }
                              catch (raw_e){
                                return Curry._1(safe.onError, Caml_js_exceptions.internalToOCamlException(raw_e));
                              }
                              if (val) {
                                return Curry._1(safe.onNext, x);
                              } else {
                                return /* () */0;
                              }
                            })
                        });
            })
        };
}

exports.operator = operator;
/* No side effect */
