// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var SafeObservableObserver$Reaxon = require("../../Observers/SafeObservableObserver.bs.js");

function operator(item, source) {
  return /* record */[/* subscribeWith */(function (obs) {
              var safe = SafeObservableObserver$Reaxon.make(obs);
              var empty = /* record */[/* contents */true];
              return Curry._1(source[/* subscribeWith */0], /* record */[
                          /* onSubscribe */(function (sub) {
                              return Curry._1(safe[/* onSubscribe */0], sub);
                            }),
                          /* onComplete */(function (param) {
                              if (empty[0]) {
                                Curry._1(safe[/* onNext */3], item);
                              }
                              return Curry._1(safe[/* onComplete */1], /* () */0);
                            }),
                          /* onError */(function (x) {
                              return Curry._1(safe[/* onError */2], x);
                            }),
                          /* onNext */(function (x) {
                              empty[0] = false;
                              return Curry._1(safe[/* onNext */3], x);
                            })
                        ]);
            })];
}

exports.operator = operator;
/* No side effect */
