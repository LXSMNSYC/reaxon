// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var SafeMaybeObserver$Reaxon = require("../../Observers/SafeMaybeObserver.bs.js");
var OptionalSubscription$Reaxon = require("../../Utils/OptionalSubscription.bs.js");

function operator(observer, source) {
  var alive = {
    contents: true
  };
  var subRef = {
    contents: undefined
  };
  var subscription = {
    cancel: (function (param) {
        if (alive.contents) {
          OptionalSubscription$Reaxon.cancel(subRef.contents);
          alive.contents = false;
          return /* () */0;
        } else {
          return 0;
        }
      })
  };
  Curry._1(source.subscribeWith, SafeMaybeObserver$Reaxon.make({
            onSubscribe: (function (sub) {
                subRef.contents = sub;
                return /* () */0;
              }),
            onComplete: (function (param) {
                Curry._1(observer.onComplete, /* () */0);
                return Curry._1(subscription.cancel, /* () */0);
              }),
            onSuccess: (function (x) {
                Curry._1(observer.onSuccess, x);
                return Curry._1(subscription.cancel, /* () */0);
              }),
            onError: (function (x) {
                Curry._1(observer.onError, x);
                return Curry._1(subscription.cancel, /* () */0);
              })
          }));
  return subscription;
}

exports.operator = operator;
/* No side effect */
