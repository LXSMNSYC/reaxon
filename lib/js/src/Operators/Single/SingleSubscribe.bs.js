// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var SafeSingleObserver$Reaxon = require("../../Observers/SafeSingleObserver.bs.js");
var OptionalSubscription$Reaxon = require("../../Utils/OptionalSubscription.bs.js");

function operator(observer, source) {
  var alive = /* record */[/* contents */true];
  var subRef = /* record */[/* contents */undefined];
  var subscription = /* record */[/* cancel */(function (param) {
        if (alive[0]) {
          OptionalSubscription$Reaxon.cancel(subRef[0]);
          alive[0] = false;
          return /* () */0;
        } else {
          return 0;
        }
      })];
  Curry._1(source[/* subscribeWith */0], SafeSingleObserver$Reaxon.make(/* record */[
            /* onSubscribe */(function (sub) {
                subRef[0] = sub;
                return /* () */0;
              }),
            /* onSuccess */(function (x) {
                Curry._1(observer[/* onSuccess */0], x);
                return Curry._1(subscription[/* cancel */0], /* () */0);
              }),
            /* onError */(function (x) {
                Curry._1(observer[/* onError */1], x);
                return Curry._1(subscription[/* cancel */0], /* () */0);
              })
          ]));
  return subscription;
}

exports.operator = operator;
/* No side effect */
