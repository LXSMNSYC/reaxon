// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var OptionalSubscription$Reaxon = require("../Utils/OptionalSubscription.bs.js");
var ProtectedObservableObserver$Reaxon = require("./ProtectedObservableObserver.bs.js");

function make(obs) {
  var alive = /* record */[/* contents */true];
  var subRef = /* record */[/* contents */undefined];
  var subscription = /* record */[/* cancel */(function (param) {
        if (alive[0]) {
          OptionalSubscription$Reaxon.cancel(subRef[0]);
          alive[0] = false;
          return /* () */0;
        } else {
          return 0;
        }
      })];
  return ProtectedObservableObserver$Reaxon.make(/* record */[
              /* onSubscribe */(function (sub) {
                  if (alive[0]) {
                    subRef[0] = sub;
                    return Curry._1(obs[/* onSubscribe */0], subscription);
                  } else {
                    return Curry._1(sub[/* cancel */0], /* () */0);
                  }
                }),
              /* onComplete */(function (param) {
                  if (alive[0]) {
                    Curry._1(obs[/* onComplete */1], /* () */0);
                    return Curry._1(subscription[/* cancel */0], /* () */0);
                  } else {
                    return 0;
                  }
                }),
              /* onError */(function (x) {
                  if (alive[0]) {
                    Curry._1(obs[/* onError */2], x);
                    return Curry._1(subscription[/* cancel */0], /* () */0);
                  } else {
                    throw x;
                  }
                }),
              /* onNext */(function (x) {
                  if (alive[0]) {
                    return Curry._1(obs[/* onNext */3], x);
                  } else {
                    return 0;
                  }
                })
            ]);
}

exports.make = make;
/* No side effect */
